syntax = "proto2";

package treppb;

message IATACode {
  required string code = 1;
} 

message ICAOCode {
  required string code = 1;
} 

message FAACode {
  required string code = 1;
} 

message UNLOCode {
  required string code = 1;
} 

message GeonamesID {
  required int32 id = 1 [default = 0];
}

message EnvelopeID {
  required int32 id = 1;
}

message StateCode {
  required string code = 1;
}

message CountryCode {
  required string code = 1;
}

message AltCountryCode {
  required string code = 1;
}

message WorldAreaCode {
  required int32 code = 1;
}

message ContinentCode {
  required string code = 1;
}

message CurrencyCode {
  required string code = 1;
}

message FeatureClass {
  required string code = 1;
}

message FeatureCode {
  required string code = 1;
}

message FeatureType {
  required FeatureClass fclass = 1;
  required FeatureCode fcode = 2;
}

message Comment {
  required string text = 1;
}

message Date {
  required string date = 1;
} 

message Admin1Code {
  required string code = 1;
} 

message Admin2Code {
  required string code = 1;
} 

message Admin3Code {
  required string code = 1;
} 

message Admin4Code {
  required string code = 1;
} 

message Population {
  required int32 value = 1;
}

message Elevation {
  required int32 value = 1;
}

message GTopo30 {
  required int32 value = 1;
}

message TravelRelatedList {
  repeated string tvl_code = 1;
} 

message TimeZone {
  required string tz = 1;
} 

message TZOffSet {
  required sint32 offset = 1;
} 

message LanguageCode {
  required string code = 1;
} 

message AltName {
  required LanguageCode lang = 1;
  required string name = 2;
} 

message AltNameList {
  repeated AltName name = 1;
} 

message WikiLink {
  required LanguageCode lang = 1;
  required string link = 2;
} 

message WikiLinkList {
  repeated WikiLink link = 1;
} 

message City {
  required IATACode code = 1;
  required GeonamesID geonames_id = 2;
  required string name_utf = 3;
  required string name_ascii = 4;
}

message CityList {
  repeated City city = 1;
}

message GeoPoint {
  required double latitude = 1;
  required double longitude = 2;
}

message PageRank {
  required double rank = 1;
}

message MatchingPercentage {
  required double percentage = 1;
}

message KeywordList {
  repeated string word = 1;
} 

message EditDistance {
  required int32 dist = 1;
}

message PlaceType {
  enum LocationType {
    CTY_AIRP = 0;
    CTY_HPT = 1;
    CTY_RSTN = 2;
    CTY_BSTN = 3;
    CTY_FERRY = 4;
    CITY = 5;
    AIRP = 6;
    HPT = 7;
    RSTN = 8;
    BSTN = 9;
    FERRY = 10;
    OFF = 11;
    UNKNOWN = 12;
  }

  required LocationType type = 1 [default = UNKNOWN];
}

message PlaceList {
  repeated Place place = 1;
}

message Place {
  optional IATACode tvl_code = 1;
  optional ICAOCode icao_code = 2;
  optional FAACode faa_code = 3;
  optional UNLOCode unlocode_code = 4;
  optional bool is_geonames = 5;
  required GeonamesID geonames_id = 6;
  optional EnvelopeID env_id = 7;
  required string name_utf = 8;
  required string name_ascii = 9;
  optional GeoPoint coord = 10;
  optional FeatureType feat_type = 11;
  optional PageRank page_rank = 12;
  optional Date date_from = 13;
  optional Date date_end = 14;
  optional Comment comment = 15;
  optional CountryCode country_code = 16;
  optional AltCountryCode alt_country_code = 17;
  optional string country_name = 18;
  optional CurrencyCode currency_code = 19;
  optional ContinentCode continent_code = 20;
  optional string continent_name = 21;
  optional Admin1Code adm1_code = 22;
  optional string adm1_name_utf = 23;
  optional string adm1_name_ascii = 24;
  optional Admin2Code adm2_code = 25;
  optional string adm2_name_utf = 26;
  optional string adm2_name_ascii = 27;
  optional Admin3Code adm3_code = 28;
  optional Admin4Code adm4_code = 29;
  optional Population population = 30;
  optional Elevation elevation = 31;
  optional GTopo30 gtopo30 = 32;
  optional TimeZone tz = 33;
  optional TZOffSet gmt_offset = 34;
  optional TZOffSet dst_offset = 35;
  optional TZOffSet raw_offset = 36;
  optional Date mod_date = 37;
  optional CityList city_list = 38;
  optional TravelRelatedList tvl_por_list = 39;
  optional StateCode state_code = 40;
  optional WorldAreaCode wac_code = 41;
  optional string wac_name = 42;
  optional PlaceType loc_type = 43;
  optional WikiLinkList link_list = 44;
  optional AltNameList alt_name_list = 45;
  optional KeywordList original_keyword_list = 46;
  optional KeywordList corrected_keyword_list = 47;
  optional EditDistance edit_distance_actual = 48;
  optional EditDistance edit_distance_allowable = 49;
  optional MatchingPercentage matching_percentage = 50;
  optional PlaceList extra_place_list = 51;
  optional PlaceList alt_place_list = 52;
}

message UnknownKeywordList {
  repeated string word = 1;
}

message ErrorMessage {
  required string msg = 1;
}

message QueryAnswer {
  required bool ok_status = 1;
  optional ErrorMessage error_msg = 2;
  required PlaceList place_list = 3;
  required UnknownKeywordList unmatched_keyword_list = 4;
}
